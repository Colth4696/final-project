{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jameshafer/Downloads/client_side-main/src/MessagesArea.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport NewMessageForm from './NewMessageForm';\n\nconst MessagesArea = ({\n  chatroom: {\n    id,\n    name,\n    messages\n  },\n  user_id,\n  cableApp\n}) => {\n  _s();\n\n  const [messageList, setMessageList] = React.useState(messages);\n  React.useEffect(() => {\n    console.log(cableApp);\n    cableApp.room = cableApp.cable.subscriptions.create({\n      channel: 'chatroom_channel',\n      room: window.location.href.match(/\\d+$/)[0]\n    }, {\n      received: updatedRoom => {\n        console.log(updatedRoom);\n        setMessageList(updatedRoom);\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messagesArea\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orderedMessages(messageList)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewMessageForm, {\n      chatroom_id: id,\n      user_id: user_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessagesArea, \"5wBgT6Hkuc5/eLxZyR4+dDMTAjk=\");\n\n_c = MessagesArea;\nexport default MessagesArea; // helpers\n\nconst orderedMessages = messages => {\n  const sortedMessages = messages.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n  return sortedMessages.map(message => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: message.text\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesArea\");","map":{"version":3,"sources":["/Users/jameshafer/Downloads/client_side-main/src/MessagesArea.js"],"names":["React","NewMessageForm","MessagesArea","chatroom","id","name","messages","user_id","cableApp","messageList","setMessageList","useState","useEffect","console","log","room","cable","subscriptions","create","channel","window","location","href","match","received","updatedRoom","orderedMessages","sortedMessages","sort","a","b","Date","created_at","map","message","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA;AAAZ,GADU;AACcC,EAAAA,OADd;AACuBC,EAAAA;AADvB,CAAD,KAEf;AAAA;;AACJ,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,KAAK,CAACW,QAAN,CAAeL,QAAf,CAAtC;AAEAN,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAA,IAAAA,QAAQ,CAACO,IAAT,GAAgBP,QAAQ,CAACQ,KAAT,CAAeC,aAAf,CAA6BC,MAA7B,CAAoC;AAChDC,MAAAA,OAAO,EAAE,kBADuC;AAEhDJ,MAAAA,IAAI,EAAEK,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,MAA3B,EAAmC,CAAnC;AAF0C,KAApC,EAIhB;AACIC,MAAAA,QAAQ,EAAGC,WAAD,IAAiB;AACzBZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,WAAZ;AACAf,QAAAA,cAAc,CAACe,WAAD,CAAd;AACD;AAJL,KAJgB,CAAhB;AAUD,GAZD;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA,gBAAKpB;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKqB,eAAe,CAACjB,WAAD;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,cAAD;AAAgB,MAAA,WAAW,EAAEL,EAA7B;AAAiC,MAAA,OAAO,EAAEG;AAA1C;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA1BD;;GAAML,Y;;KAAAA,Y;AA4BN,eAAeA,YAAf,C,CAEA;;AAEA,MAAMwB,eAAe,GAAGpB,QAAQ,IAAI;AAClC,QAAMqB,cAAc,GAAGrB,QAAQ,CAACsB,IAAT,CACrB,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASF,CAAC,CAACG,UAAX,IAAyB,IAAID,IAAJ,CAASD,CAAC,CAACE,UAAX,CADd,CAAvB;AAGA,SAAOL,cAAc,CAACM,GAAf,CAAmBC,OAAO,IAAI;AACnC,wBAAO;AAAA,gBAAsBA,OAAO,CAACC;AAA9B,OAASD,OAAO,CAAC9B,EAAjB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,CAAP;AAGD,CAPD","sourcesContent":["import React from 'react';\r\nimport NewMessageForm from './NewMessageForm';\r\n\r\nconst MessagesArea = ({\r\n  chatroom: { id, name, messages }, user_id, cableApp\r\n}) => {\r\n  const [messageList, setMessageList] = React.useState(messages)\r\n\r\n  React.useEffect(() => {\r\n    console.log(cableApp);\r\n    cableApp.room = cableApp.cable.subscriptions.create({\r\n        channel: 'chatroom_channel',\r\n        room: window.location.href.match(/\\d+$/)[0]\r\n    }, \r\n    {\r\n        received: (updatedRoom) => {\r\n          console.log(updatedRoom);\r\n          setMessageList(updatedRoom)\r\n        }\r\n    })\r\n  })\r\n\r\n  return (\r\n    <div className=\"messagesArea\">\r\n      <h2>{name}</h2>\r\n      <ul>{orderedMessages(messageList)}</ul>\r\n      <NewMessageForm chatroom_id={id} user_id={user_id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesArea;\r\n\r\n// helpers\r\n\r\nconst orderedMessages = messages => {\r\n  const sortedMessages = messages.sort(\r\n    (a, b) => new Date(a.created_at) - new Date(b.created_at)\r\n  );\r\n  return sortedMessages.map(message => {\r\n    return <li key={message.id}>{message.text}</li>;\r\n  });\r\n};"]},"metadata":{},"sourceType":"module"}