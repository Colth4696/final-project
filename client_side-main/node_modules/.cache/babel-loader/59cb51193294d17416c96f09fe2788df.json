{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jameshafer/Downloads/client_side-main/src/ChatModal.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { Button, Icon, Modal } from 'semantic-ui-react';\nimport Chat from './Chat';\nimport ChatroomsList from './ChatroomsList'; // function exampleReducer(state, action) {\n//   switch (action.type) {\n//     case 'close':\n//       return { open: false }\n//     case 'open':\n//       return { open: true, size: action.size }\n//     default:\n//       throw new Error('Unsupported action...')\n//   }\n// }\n\nconst ModalChat = props => {\n  _s();\n\n  const [currentChatroom, setCurrentChatroom] = React.useState();\n  const [open, setOpen] = React.useState(false); // const [state, dispatch] = React.useReducer(exampleReducer, {\n  //   open: false,\n  //   size: undefined,\n  // })\n  // const { open, size } = state\n\n  const initializeChat = () => {\n    const chatroom = {\n      name: props.request.title,\n      request_id: props.request.id,\n      volunteer_id: props.volunteer.id\n    };\n    axios.post(\"http://localhost:3003/chatrooms\", {\n      chatroom\n    }).then(response => {\n      console.log('chatroom', response);\n\n      if (response.data.status === \"created\") {\n        console.log(response.data.chatroom);\n        const chatroom = response.data.chatroom;\n        if (chatroom.messages === undefined) chatroom.messages = [];\n        setCurrentChatroom(chatroom);\n        setOpen(true); // dispatch({ type: 'open', size: 'fullscreen' })\n      }\n    });\n  };\n\n  console.log(currentChatroom);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: initializeChat,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"desktop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \"Start Chat\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(ChatroomsList, {\n      user_id: props.volunteer && props.volunteer.user_id,\n      chatroom: currentChatroom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ModalChat, \"rVjzgGqmGM0k14+NW5phQD3aFTY=\");\n\n_c = ModalChat;\nexport default ModalChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalChat\");","map":{"version":3,"sources":["/Users/jameshafer/Downloads/client_side-main/src/ChatModal.js"],"names":["axios","React","Button","Icon","Modal","Chat","ChatroomsList","ModalChat","props","currentChatroom","setCurrentChatroom","useState","open","setOpen","initializeChat","chatroom","name","request","title","request_id","id","volunteer_id","volunteer","post","then","response","console","log","data","status","messages","undefined","user_id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,KAAK,CAACU,QAAN,EAA9C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACU,QAAN,CAAe,KAAf,CAAxB,CAF2B,CAG3B;AACA;AACA;AACA;AACA;;AAEA,QAAMG,cAAc,GAAG,MAAM;AAC3B,UAAMC,QAAQ,GAAI;AAChBC,MAAAA,IAAI,EAAER,KAAK,CAACS,OAAN,CAAcC,KADJ;AAEhBC,MAAAA,UAAU,EAAEX,KAAK,CAACS,OAAN,CAAcG,EAFV;AAGhBC,MAAAA,YAAY,EAAEb,KAAK,CAACc,SAAN,CAAgBF;AAHd,KAAlB;AAKEpB,IAAAA,KAAK,CAACuB,IAAN,CAAW,iCAAX,EAA8C;AAACR,MAAAA;AAAD,KAA9C,EACCS,IADD,CACOC,QAAQ,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;;AACA,UAAIA,QAAQ,CAACG,IAAT,CAAcC,MAAd,KAAyB,SAA7B,EAAwC;AACtCH,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcb,QAA1B;AACA,cAAMA,QAAQ,GAAGU,QAAQ,CAACG,IAAT,CAAcb,QAA/B;AACA,YAAIA,QAAQ,CAACe,QAAT,KAAsBC,SAA1B,EAAqChB,QAAQ,CAACe,QAAT,GAAoB,EAApB;AACrCpB,QAAAA,kBAAkB,CAACK,QAAD,CAAlB;AACAF,QAAAA,OAAO,CAAC,IAAD,CAAP,CALsC,CAMtC;AACD;AACF,KAXD;AAYH,GAlBD;;AAmBAa,EAAAA,OAAO,CAACC,GAAR,CAAYlB,eAAZ;AACA,sBACE;AAAA,4BAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEK,cAAjB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAcKF,IAAI,iBAAI,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEJ,KAAK,CAACc,SAAN,IAAmBd,KAAK,CAACc,SAAN,CAAgBU,OAA3D;AAAoE,MAAA,QAAQ,EAAEvB;AAA9E;AAAA;AAAA;AAAA;AAAA,YAdb;AAAA,kBADF;AA4BD,CAzDD;;GAAMF,S;;KAAAA,S;AA2DN,eAAeA,SAAf","sourcesContent":["import axios from 'axios'\r\nimport React from 'react'\r\nimport { Button, Icon, Modal } from 'semantic-ui-react'\r\nimport Chat from './Chat'\r\nimport ChatroomsList from './ChatroomsList'\r\n\r\n// function exampleReducer(state, action) {\r\n//   switch (action.type) {\r\n//     case 'close':\r\n//       return { open: false }\r\n//     case 'open':\r\n//       return { open: true, size: action.size }\r\n//     default:\r\n//       throw new Error('Unsupported action...')\r\n//   }\r\n// }\r\n\r\nconst ModalChat = (props) => {\r\n  const [currentChatroom, setCurrentChatroom] = React.useState();\r\n  const [open, setOpen] = React.useState(false);\r\n  // const [state, dispatch] = React.useReducer(exampleReducer, {\r\n  //   open: false,\r\n  //   size: undefined,\r\n  // })\r\n  // const { open, size } = state\r\n\r\n  const initializeChat = () => {\r\n    const chatroom  = {\r\n      name: props.request.title,\r\n      request_id: props.request.id,\r\n      volunteer_id: props.volunteer.id\r\n    }\r\n      axios.post(\"http://localhost:3003/chatrooms\", {chatroom})\r\n      .then (response => {\r\n        console.log('chatroom', response);\r\n        if (response.data.status === \"created\") {\r\n          console.log(response.data.chatroom);\r\n          const chatroom = response.data.chatroom;\r\n          if (chatroom.messages === undefined) chatroom.messages = [];\r\n          setCurrentChatroom(chatroom);\r\n          setOpen(true);\r\n          // dispatch({ type: 'open', size: 'fullscreen' })\r\n        }\r\n      })\r\n  }\r\n  console.log(currentChatroom);\r\n  return (\r\n    <>\r\n \r\n      <Button onClick={initializeChat}>\r\n        <Icon name='desktop' />\r\n        Start Chat\r\n      </Button>\r\n\r\n      {/* <Modal\r\n        size={size}\r\n        open={open}\r\n        onClose={() => dispatch({ type: 'close' })}\r\n      >\r\n        <Modal.Header>Message Request Owner</Modal.Header>\r\n        <Modal.Content> */}\r\n        {open && <ChatroomsList user_id={props.volunteer && props.volunteer.user_id} chatroom={currentChatroom}/>}\r\n        {/* </Modal.Content> */}\r\n        {/* <Modal.Actions>\r\n          <Button negative onClick={() => dispatch({ type: 'close' })}>\r\n            No\r\n          </Button>\r\n          <Button positive onClick={() => dispatch({ type: 'close' })}>\r\n            Yes\r\n          </Button>\r\n        </Modal.Actions> */}\r\n      {/* </Modal> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ModalChat"]},"metadata":{},"sourceType":"module"}