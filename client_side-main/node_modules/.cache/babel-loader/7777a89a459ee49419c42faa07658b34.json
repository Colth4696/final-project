{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jameshafer/Downloads/client_side-main/src/exampleReducer.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { Button, Icon, Modal } from 'semantic-ui-react';\nimport Chat from './Chat';\nimport ChatroomsList from './ChatroomsList'; // function exampleReducer(state, action) {\n//   switch (action.type) {\n//     case 'close':\n//       return { open: false }\n//     case 'open':\n//       return { open: true, size: action.size }\n//     default:\n//       throw new Error('Unsupported action...')\n//   }\n// }\n\nconst ModalChat = props => {\n  _s();\n\n  const [currentChatroom, setCurrentChatroom] = React.useState();\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const initializeChat = () => {\n    const chatroom = {\n      name: props.request.title,\n      request_id: props.request.id,\n      volunteer_id: props.volunteer.id\n    };\n    axios.post(\"http://localhost:3003/chatrooms\", {\n      chatroom\n    }).then(response => {\n      console.log(response);\n      setCurrentChatroom(response.data);\n      setIsOpen(true); // dispatch({ type: 'open', size: 'fullscreen' })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: initializeChat,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"desktop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \"Start Chat\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: 'fullscreen',\n      open: isOpen,\n      onClose: () => setIsOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Message Request Owner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(ChatroomsList, {\n          request: props.request,\n          volunteer: props.volunteer,\n          chatroom: currentChatroom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ModalChat, \"85jKpdUV6gwJUm+v0xPG/ob/EBE=\");\n\n_c = ModalChat;\nexport default ModalChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalChat\");","map":{"version":3,"sources":["/Users/jameshafer/Downloads/client_side-main/src/exampleReducer.js"],"names":["axios","React","Button","Icon","Modal","Chat","ChatroomsList","ModalChat","props","currentChatroom","setCurrentChatroom","useState","isOpen","setIsOpen","initializeChat","chatroom","name","request","title","request_id","id","volunteer_id","volunteer","post","then","response","console","log","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,KAAK,CAACU,QAAN,EAA9C;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,KAAK,CAACU,QAAN,CAAe,KAAf,CAA5B;;AAEA,QAAMG,cAAc,GAAG,MAAM;AAC3B,UAAMC,QAAQ,GAAI;AAChBC,MAAAA,IAAI,EAAER,KAAK,CAACS,OAAN,CAAcC,KADJ;AAEhBC,MAAAA,UAAU,EAAEX,KAAK,CAACS,OAAN,CAAcG,EAFV;AAGhBC,MAAAA,YAAY,EAAEb,KAAK,CAACc,SAAN,CAAgBF;AAHd,KAAlB;AAKEpB,IAAAA,KAAK,CAACuB,IAAN,CAAW,iCAAX,EAA8C;AAACR,MAAAA;AAAD,KAA9C,EACCS,IADD,CACOC,QAAQ,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAf,MAAAA,kBAAkB,CAACe,QAAQ,CAACG,IAAV,CAAlB;AACAf,MAAAA,SAAS,CAAC,IAAD,CAAT,CAHe,CAIf;AACH,KAND;AAOH,GAbD;;AAcA,sBACE;AAAA,4BAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,cAAjB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,KAAD;AACE,MAAA,IAAI,EAAE,YADR;AAEE,MAAA,IAAI,EAAEF,MAFR;AAGE,MAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAD,CAH1B;AAAA,8BAKE,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,KAAD,CAAO,OAAP;AAAA,+BACA,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEL,KAAK,CAACS,OAA9B;AAAuC,UAAA,SAAS,EAAET,KAAK,CAACc,SAAxD;AAAmE,UAAA,QAAQ,EAAEb;AAA7E;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AA4BD,CA9CD;;GAAMF,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import axios from 'axios'\r\nimport React from 'react'\r\nimport { Button, Icon, Modal } from 'semantic-ui-react'\r\nimport Chat from './Chat'\r\nimport ChatroomsList from './ChatroomsList'\r\n\r\n// function exampleReducer(state, action) {\r\n//   switch (action.type) {\r\n//     case 'close':\r\n//       return { open: false }\r\n//     case 'open':\r\n//       return { open: true, size: action.size }\r\n//     default:\r\n//       throw new Error('Unsupported action...')\r\n//   }\r\n// }\r\n\r\nconst ModalChat = (props) => {\r\n  const [currentChatroom, setCurrentChatroom] = React.useState();\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const initializeChat = () => {\r\n    const chatroom  = {\r\n      name: props.request.title,\r\n      request_id: props.request.id,\r\n      volunteer_id: props.volunteer.id\r\n    }\r\n      axios.post(\"http://localhost:3003/chatrooms\", {chatroom})\r\n      .then (response => {\r\n          console.log(response);\r\n          setCurrentChatroom(response.data);\r\n          setIsOpen(true);\r\n          // dispatch({ type: 'open', size: 'fullscreen' })\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n \r\n      <Button onClick={initializeChat}>\r\n        <Icon name='desktop' />\r\n        Start Chat\r\n      </Button>\r\n\r\n      <Modal\r\n        size={'fullscreen'}\r\n        open={isOpen}\r\n        onClose={() => setIsOpen(false)}\r\n      >\r\n        <Modal.Header>Message Request Owner</Modal.Header>\r\n        <Modal.Content>\r\n        <ChatroomsList request={props.request} volunteer={props.volunteer} chatroom={currentChatroom}/>\r\n        </Modal.Content>\r\n        {/* <Modal.Actions>\r\n          <Button negative onClick={() => dispatch({ type: 'close' })}>\r\n            No\r\n          </Button>\r\n          <Button positive onClick={() => dispatch({ type: 'close' })}>\r\n            Yes\r\n          </Button>\r\n        </Modal.Actions> */}\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ModalChat"]},"metadata":{},"sourceType":"module"}