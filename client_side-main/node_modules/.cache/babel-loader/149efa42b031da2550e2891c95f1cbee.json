{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jameshafer/Downloads/client_side-main/src/MessagesArea.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport NewMessageForm from './NewMessageForm';\n\nconst MessagesArea = props => {\n  _s();\n\n  const {\n    chatroom: {\n      id,\n      name,\n      messages\n    },\n    user_id,\n    cableApp\n  } = props;\n  const [messageList, setMessageList] = React.useState(messages);\n\n  const updateMessages = message => {\n    console.log(message);\n    const allMessages = messageList;\n    allMessages.push(message);\n    console.log('allMessages', allMessages);\n    setMessageList(allMessages);\n  };\n\n  React.useEffect(() => {\n    console.log(props);\n    console.log(messages);\n    console.log(cableApp);\n    cableApp.room = cableApp.cable.subscriptions.create({\n      channel: 'chatroom_channel',\n      chatroom: id\n    }, {\n      received: newMessage => {\n        console.log(newMessage);\n        updateMessages(newMessage);\n      }\n    });\n  }, [cableApp, id, props, messages, messageList]);\n\n  const orderedMessages = messages => {\n    if (!messages) return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"No Messages yet...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }, this);\n    const sortedMessages = messages.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n    return sortedMessages.map(message => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message.body\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  console.log('messageList', messageList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messagesArea\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orderedMessages(messageList)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewMessageForm, {\n      chatroom_id: id,\n      user_id: user_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessagesArea, \"5wBgT6Hkuc5/eLxZyR4+dDMTAjk=\");\n\n_c = MessagesArea;\nexport default MessagesArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesArea\");","map":{"version":3,"sources":["/Users/jameshafer/Downloads/client_side-main/src/MessagesArea.js"],"names":["React","NewMessageForm","MessagesArea","props","chatroom","id","name","messages","user_id","cableApp","messageList","setMessageList","useState","updateMessages","message","console","log","allMessages","push","useEffect","room","cable","subscriptions","create","channel","received","newMessage","orderedMessages","sortedMessages","sort","a","b","Date","created_at","map","body"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AACJC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KADN;AAC8BC,IAAAA,OAD9B;AACuCC,IAAAA;AADvC,MAEFN,KAFJ;AAGA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACY,QAAN,CAAeL,QAAf,CAAtC;;AAEA,QAAMM,cAAc,GAAIC,OAAD,IAAa;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,UAAMG,WAAW,GAAGP,WAApB;AACAO,IAAAA,WAAW,CAACC,IAAZ,CAAiBJ,OAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,WAA3B;AACAN,IAAAA,cAAc,CAACM,WAAD,CAAd;AACD,GAND;;AAQAjB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAA,IAAAA,QAAQ,CAACW,IAAT,GAAgBX,QAAQ,CAACY,KAAT,CAAeC,aAAf,CAA6BC,MAA7B,CAAoC;AAChDC,MAAAA,OAAO,EAAE,kBADuC;AAEhDpB,MAAAA,QAAQ,EAAEC;AAFsC,KAApC,EAIhB;AACIoB,MAAAA,QAAQ,EAAGC,UAAD,IAAgB;AACxBX,QAAAA,OAAO,CAACC,GAAR,CAAYU,UAAZ;AACAb,QAAAA,cAAc,CAACa,UAAD,CAAd;AACD;AAJL,KAJgB,CAAhB;AAUD,GAdD,EAcE,CAACjB,QAAD,EAAWJ,EAAX,EAAeF,KAAf,EAAsBI,QAAtB,EAAgCG,WAAhC,CAdF;;AAgBA,QAAMiB,eAAe,GAAGpB,QAAQ,IAAI;AAClC,QAAI,CAACA,QAAL,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACf,UAAMqB,cAAc,GAAGrB,QAAQ,CAACsB,IAAT,CACrB,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASF,CAAC,CAACG,UAAX,IAAyB,IAAID,IAAJ,CAASD,CAAC,CAACE,UAAX,CADd,CAAvB;AAGA,WAAOL,cAAc,CAACM,GAAf,CAAmBpB,OAAO,IAAI;AACnC,0BAAO;AAAA,kBAAsBA,OAAO,CAACqB;AAA9B,SAASrB,OAAO,CAACT,EAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD,GARD;;AAUAU,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,WAA3B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA,gBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKqB,eAAe,CAACjB,WAAD;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,cAAD;AAAgB,MAAA,WAAW,EAAEL,EAA7B;AAAiC,MAAA,OAAO,EAAEG;AAA1C;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhDD;;GAAMN,Y;;KAAAA,Y;AAkDN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport NewMessageForm from './NewMessageForm';\r\n\r\nconst MessagesArea = (props) => {\r\n  const {\r\n    chatroom: { id, name, messages }, user_id, cableApp\r\n  } = props;\r\n  const [messageList, setMessageList] = React.useState(messages);\r\n\r\n  const updateMessages = (message) => {\r\n    console.log(message);\r\n    const allMessages = messageList;\r\n    allMessages.push(message);\r\n    console.log('allMessages', allMessages);\r\n    setMessageList(allMessages)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    console.log(props);\r\n    console.log(messages);\r\n    console.log(cableApp);\r\n    cableApp.room = cableApp.cable.subscriptions.create({\r\n        channel: 'chatroom_channel',\r\n        chatroom: id\r\n    }, \r\n    {\r\n        received: (newMessage) => {\r\n          console.log(newMessage);\r\n          updateMessages(newMessage);\r\n        }\r\n    })\r\n  },[cableApp, id, props, messages, messageList])\r\n\r\n  const orderedMessages = messages => {\r\n    if (!messages) return <li>No Messages yet...</li>\r\n    const sortedMessages = messages.sort(\r\n      (a, b) => new Date(a.created_at) - new Date(b.created_at)\r\n    );\r\n    return sortedMessages.map(message => {\r\n      return <li key={message.id}>{message.body}</li>;\r\n    });\r\n  };\r\n\r\n  console.log('messageList', messageList);\r\n  return (\r\n    <div className=\"messagesArea\">\r\n      <h2>{name}</h2>\r\n      <ul>{orderedMessages(messageList)}</ul>\r\n      <NewMessageForm chatroom_id={id} user_id={user_id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesArea;\r\n"]},"metadata":{},"sourceType":"module"}