{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jameshafer/Downloads/client_side-main/src/MessagesArea.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport NewMessageForm from './NewMessageForm';\n\nconst MessagesArea = props => {\n  _s();\n\n  console.log(props);\n  const [messageList, setMessageList] = React.useState(props.chatroom && props.chatroom.messages);\n\n  const updateMessages = message => {\n    console.log(messageList.concat(message));\n    let allMessages = messageList;\n    console.log('allMessages before', allMessages);\n    setMessageList(messageList.concat(message));\n  };\n\n  React.useEffect(() => {\n    props.cableApp.room = props.cableApp.cable.subscriptions.create({\n      channel: 'chatroom_channel',\n      chatroom: props.id\n    }, {\n      received: newMessage => {\n        updateMessages(newMessage);\n      }\n    });\n  }, [messageList]);\n\n  const orderedMessages = messages => {\n    if (!messages) return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"No Messages yet...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 27\n    }, this);\n    const sortedMessages = messages.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n    return sortedMessages.map(message => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message.body\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  console.log('messageList', messageList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messagesArea\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.chatroom && props.chatroom.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orderedMessages(messageList)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewMessageForm, {\n      chatroom_id: props.chatroom && props.chatroom.id,\n      user_id: props.user_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessagesArea, \"aflxt/fxUBoXV1lN45gbtFsslRU=\");\n\n_c = MessagesArea;\nexport default MessagesArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesArea\");","map":{"version":3,"sources":["/Users/jameshafer/Downloads/client_side-main/src/MessagesArea.js"],"names":["React","NewMessageForm","MessagesArea","props","console","log","messageList","setMessageList","useState","chatroom","messages","updateMessages","message","concat","allMessages","useEffect","cableApp","room","cable","subscriptions","create","channel","id","received","newMessage","orderedMessages","sortedMessages","sort","a","b","Date","created_at","map","body","name","user_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCP,KAAK,CAACQ,QAAN,CAAeL,KAAK,CAACM,QAAN,IAAkBN,KAAK,CAACM,QAAN,CAAeC,QAAhD,CAAtC;;AAEA,QAAMC,cAAc,GAAIC,OAAD,IAAa;AAClCR,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAW,CAACO,MAAZ,CAAmBD,OAAnB,CAAZ;AACA,QAAIE,WAAW,GAAGR,WAAlB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCS,WAAlC;AACAP,IAAAA,cAAc,CAACD,WAAW,CAACO,MAAZ,CAAmBD,OAAnB,CAAD,CAAd;AACD,GALD;;AAOAZ,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACpBZ,IAAAA,KAAK,CAACa,QAAN,CAAeC,IAAf,GAAsBd,KAAK,CAACa,QAAN,CAAeE,KAAf,CAAqBC,aAArB,CAAmCC,MAAnC,CAA0C;AAC5DC,MAAAA,OAAO,EAAE,kBADmD;AAE5DZ,MAAAA,QAAQ,EAAEN,KAAK,CAACmB;AAF4C,KAA1C,EAItB;AACIC,MAAAA,QAAQ,EAAGC,UAAD,IAAgB;AACxBb,QAAAA,cAAc,CAACa,UAAD,CAAd;AACD;AAHL,KAJsB,CAAtB;AASD,GAVD,EAUE,CAAClB,WAAD,CAVF;;AAYA,QAAMmB,eAAe,GAAGf,QAAQ,IAAI;AAClC,QAAI,CAACA,QAAL,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACf,UAAMgB,cAAc,GAAGhB,QAAQ,CAACiB,IAAT,CACrB,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASF,CAAC,CAACG,UAAX,IAAyB,IAAID,IAAJ,CAASD,CAAC,CAACE,UAAX,CADd,CAAvB;AAGA,WAAOL,cAAc,CAACM,GAAf,CAAmBpB,OAAO,IAAI;AACnC,0BAAO;AAAA,kBAAsBA,OAAO,CAACqB;AAA9B,SAASrB,OAAO,CAACU,EAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD,GARD;;AAUAlB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,WAA3B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA,gBAAKH,KAAK,CAACM,QAAN,IAAkBN,KAAK,CAACM,QAAN,CAAeyB;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKT,eAAe,CAACnB,WAAD;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,cAAD;AAAgB,MAAA,WAAW,EAAEH,KAAK,CAACM,QAAN,IAAkBN,KAAK,CAACM,QAAN,CAAea,EAA9D;AAAkE,MAAA,OAAO,EAAEnB,KAAK,CAACgC;AAAjF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAzCD;;GAAMjC,Y;;KAAAA,Y;AA2CN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport NewMessageForm from './NewMessageForm';\r\n\r\nconst MessagesArea = (props) => {\r\n  console.log(props);\r\n  const [messageList, setMessageList] = React.useState(props.chatroom && props.chatroom.messages);\r\n\r\n  const updateMessages = (message) => {\r\n    console.log(messageList.concat(message));\r\n    let allMessages = messageList;\r\n    console.log('allMessages before', allMessages);\r\n    setMessageList(messageList.concat(message))\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    props.cableApp.room = props.cableApp.cable.subscriptions.create({\r\n        channel: 'chatroom_channel',\r\n        chatroom: props.id\r\n    }, \r\n    {\r\n        received: (newMessage) => {\r\n          updateMessages(newMessage);\r\n        }\r\n    })\r\n  },[messageList])\r\n\r\n  const orderedMessages = messages => {\r\n    if (!messages) return <li>No Messages yet...</li>\r\n    const sortedMessages = messages.sort(\r\n      (a, b) => new Date(a.created_at) - new Date(b.created_at)\r\n    );\r\n    return sortedMessages.map(message => {\r\n      return <li key={message.id}>{message.body}</li>;\r\n    });\r\n  };\r\n\r\n  console.log('messageList', messageList);\r\n  return (\r\n    <div className=\"messagesArea\">\r\n      <h2>{props.chatroom && props.chatroom.name}</h2>\r\n      <ul>{orderedMessages(messageList)}</ul>\r\n      <NewMessageForm chatroom_id={props.chatroom && props.chatroom.id} user_id={props.user_id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesArea;\r\n"]},"metadata":{},"sourceType":"module"}