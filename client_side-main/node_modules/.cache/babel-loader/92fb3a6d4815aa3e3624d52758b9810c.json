{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jameshafer/Downloads/client_side-main/src/ChatroomsList.js\";\nimport React from 'react';\nimport { ActionCable } from 'react-actioncable-provider';\nimport { API_ROOT } from './constants/index';\nimport NewChatroomForm from './NewChatroomForm';\nimport MessagesArea from './MessagesArea';\nimport Cable from './Cable';\nimport axios from 'axios';\n\nclass ChatroomsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // chatrooms: [],\n      activeChatroom: this.props.chatroom\n    };\n\n    this.handleClick = id => {\n      this.setState({\n        activeChatroom: id\n      });\n    };\n\n    this.handleReceivedMessage = response => {\n      const {\n        message\n      } = response;\n      const {\n        activeChatroom\n      } = this.state; // const chatrooms = [...this.state.chatrooms];\n      // const chatroom = chatrooms.find(\n      //   chatroom => chatroom.id === message.chatroom_id\n      // );\n\n      if (!activeChatroom.messages) activeChatroom.messages = []; // activeChatroom.messages.concat(message)\n\n      activeChatroom.messages = [...activeChatroom.messages, message];\n      this.setState({\n        activeChatroom\n      });\n    };\n\n    this.render = () => {\n      const {\n        activeChatroom\n      } = this.state;\n      console.log(activeChatroom);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ChatroomsList\",\n        children: activeChatroom ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: activeChatroom ? /*#__PURE__*/_jsxDEV(MessagesArea, {\n            chatroom: activeChatroom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this) : 'No Chats were found'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n}\n\nexport default ChatroomsList; // helpers\n// const findActiveChatroom = (chatrooms, activeChatroom) => {\n//   console.log('chatrooms', chatrooms)\n//   return chatrooms.find(\n//     chatroom => {console.log(chatroom.id, activeChatroom.id); return chatroom.id === 1}\n//   );\n// };\n// const mapchatrooms = (chatrooms, handleClick) => {\n//   return chatrooms.map(chatroom => {\n//     return (\n//       <li key={chatroom.id} onClick={() => handleClick(chatroom.id)}>\n//         {chatroom.name}\n//       </li>\n//     );\n//   });\n// };","map":{"version":3,"sources":["/Users/jameshafer/Downloads/client_side-main/src/ChatroomsList.js"],"names":["React","ActionCable","API_ROOT","NewChatroomForm","MessagesArea","Cable","axios","ChatroomsList","Component","state","activeChatroom","props","chatroom","handleClick","id","setState","handleReceivedMessage","response","message","messages","render","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACN;AACAC,MAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC;AAFrB,KADkC;;AAAA,SAiB1CC,WAjB0C,GAiB5BC,EAAE,IAAI;AAClB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,cAAc,EAAEI;AAAlB,OAAd;AACD,KAnByC;;AAAA,SA4B1CE,qBA5B0C,GA4BlBC,QAAQ,IAAI;AAClC,YAAM;AAAEC,QAAAA;AAAF,UAAcD,QAApB;AACA,YAAM;AAACP,QAAAA;AAAD,UAAmB,KAAKD,KAA9B,CAFkC,CAGlC;AACA;AACA;AACA;;AACA,UAAI,CAACC,cAAc,CAACS,QAApB,EAA8BT,cAAc,CAACS,QAAf,GAA0B,EAA1B,CAPI,CAQlC;;AACAT,MAAAA,cAAc,CAACS,QAAf,GAA0B,CAAC,GAAGT,cAAc,CAACS,QAAnB,EAA6BD,OAA7B,CAA1B;AACA,WAAKH,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACD,KAvCyC;;AAAA,SAyC1CU,MAzC0C,GAyCjC,MAAM;AACb,YAAM;AAAEV,QAAAA;AAAF,UAAqB,KAAKD,KAAhC;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYZ,cAAZ;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAEGA,cAAc,gBACf;AAAA,oBAcGA,cAAc,gBACb,QAAC,YAAD;AACE,YAAA,QAAQ,EAAEA;AADZ;AAAA;AAAA;AAAA;AAAA,kBADa,GAIX;AAlBN;AAAA;AAAA;AAAA;AAAA,gBADe,GAqBX;AAvBN;AAAA;AAAA;AAAA;AAAA,cADF;AA2BD,KAvEyC;AAAA;;AAAA;;AA0E5C,eAAeH,aAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport { ActionCable } from 'react-actioncable-provider';\r\nimport { API_ROOT } from './constants/index';\r\nimport NewChatroomForm from './NewChatroomForm';\r\nimport MessagesArea from './MessagesArea';\r\nimport Cable from './Cable';\r\nimport axios from 'axios';\r\n\r\nclass ChatroomsList extends React.Component {\r\n  state = {\r\n    // chatrooms: [],\r\n    activeChatroom: this.props.chatroom\r\n  };\r\n\r\n  // componentDidMount = () => {\r\n  //   console.log('mounted', this.props);\r\n  //   axios.get(`${API_ROOT}/chatrooms`)\r\n  //     .then(res => {\r\n  //       console.log('res', res); \r\n  //       this.setState({chatrooms: res.data, loadingState: 'Loaded' })\r\n  //       // res\r\n  //     })\r\n  //     // .then(chatrooms => { console.log(chatrooms); this.setState({ chatrooms })});\r\n  // };\r\n\r\n  handleClick = id => {\r\n    this.setState({ activeChatroom: id });\r\n  };\r\n\r\n  // handleReceivedChatroom = response => {\r\n  //   const { chatroom } = response;\r\n  //   this.setState({\r\n  //     chatrooms: [...this.state.chatrooms, chatroom]\r\n  //   });\r\n  // };\r\n\r\n  handleReceivedMessage = response => {\r\n    const { message } = response;\r\n    const {activeChatroom} = this.state;\r\n    // const chatrooms = [...this.state.chatrooms];\r\n    // const chatroom = chatrooms.find(\r\n    //   chatroom => chatroom.id === message.chatroom_id\r\n    // );\r\n    if (!activeChatroom.messages) activeChatroom.messages = [];\r\n    // activeChatroom.messages.concat(message)\r\n    activeChatroom.messages = [...activeChatroom.messages, message];\r\n    this.setState({ activeChatroom });\r\n  };\r\n\r\n  render = () => {\r\n    const { activeChatroom } = this.state;\r\n    console.log(activeChatroom);\r\n    return (\r\n      <div className=\"ChatroomsList\">\r\n        {/* <h1>{activeChatroom.name}</h1> */}\r\n        {activeChatroom ?\r\n        <div>\r\n          {/* <ActionCable\r\n            channel={{ channel: 'chatroom_channel' }}\r\n            onReceived={this.handleReceivedChatroom}\r\n          />\r\n          {this.state.chatrooms.length ? (\r\n            <Cable\r\n              chatrooms={chatrooms}\r\n              handleReceivedMessage={this.handleReceivedMessage}\r\n            />\r\n          ) : null} */}\r\n          {/* <h2>Chatrooms</h2> */}\r\n          {/* <ul>{mapchatrooms(chatrooms, this.handleClick)}</ul> */}\r\n          {/* <NewChatroomForm /> */}\r\n          {activeChatroom ? (\r\n            <MessagesArea\r\n              chatroom={activeChatroom}\r\n            />\r\n          ) : null}\r\n          </div>\r\n          : 'No Chats were found'}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default ChatroomsList;\r\n\r\n// helpers\r\n\r\n// const findActiveChatroom = (chatrooms, activeChatroom) => {\r\n//   console.log('chatrooms', chatrooms)\r\n//   return chatrooms.find(\r\n//     chatroom => {console.log(chatroom.id, activeChatroom.id); return chatroom.id === 1}\r\n//   );\r\n// };\r\n\r\n// const mapchatrooms = (chatrooms, handleClick) => {\r\n//   return chatrooms.map(chatroom => {\r\n//     return (\r\n//       <li key={chatroom.id} onClick={() => handleClick(chatroom.id)}>\r\n//         {chatroom.name}\r\n//       </li>\r\n//     );\r\n//   });\r\n// };"]},"metadata":{},"sourceType":"module"}